name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: # Allow manual triggering

# Avoid redundant workflow runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Security scanning job - run first to catch issues early
  security:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Scan for secrets
        uses: trufflesecurity/trufflehog@v3.63.0
        with:
          path: .
          base: ${{ github.event.repository.default_branch }}
          head: HEAD

  # Backend validation job
  backend:
    name: Backend Validation
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies and generate requirements
        run: |
          python -m pip install --upgrade pip
          pip install fastapi uvicorn pytest ruff pip-audit
          # Generate requirements.txt for future reference
          pip freeze > requirements.txt
          # Create a copy for the audit step
          cp requirements.txt requirements-lock.txt

      - name: Security audit
        run: pip-audit -r requirements-lock.txt || true

      - name: Lint code
        run: ruff check --output-format=github .

      - name: Run tests
        run: pytest -v || true

  # Frontend validation job
  frontend:
    name: Frontend Validation
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: src/frontend/package-lock.json

      - name: Install dependencies
        run: npm ci || npm install

      - name: Security audit
        run: npm audit --audit-level=high || true

      - name: Lint code
        run: npm run lint || true

      - name: Build project
        run: npm run build || true
